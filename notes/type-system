type system is Hindley-Milner with extensions

tau := F | v | x | tt | lambda x . t


-- option 1

STLC with a extensions for collections types and functions with complex semantics


-- option 2

System F with similar extensions

- types dependent on values
      i.e. If (code == 200) then (42) else ("error") : Lambda (code: Int) . If (code == 200) then Int else String



Какие варианты с типизацией условных конструкций:
- не тпизировать их, если тип терма зависит от условия
- типизировать их в any, что почти то же самое, но более информативно
- типизировать их в зависимый тип -- ещё более информативно. Потом зависимый тип можно интерпретировать как any или absurd
  ^ думаю, так лучше всего

Тогда вопрос как интерепретировать зависимые типы.
- разрешить пользователям подставлять значения в зависимые типы
- ограничить параметры зависимых типов значением рантайм-переменных и разрешить пользователям явно накладывать ограничения на них
- выводить ограничения на значения рантайм-переменных и проверять их в рантайме
- рассматривать схему вычисляемых структур как ограничение на типы и ломаться если значения в рантайме не соответствуют им
